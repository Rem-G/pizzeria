{"ast":null,"code":"var _jsxFileName = \"/Users/remi/Desktop/Polytech/4A/INFO734/TP/Pizzeria/React/src/components/cardPizza.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent'; //import Button from '@material-ui/core/Button';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"../App.css\";\nconst useStyles = makeStyles({\n  root: {\n    width: 100,\n    minWidth: 275\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 18\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\n\nclass PizzaIngredients {\n  constructor() {\n    this.ingredients = [];\n  }\n\n  addIngredient(ingredient) {\n    this.ingredients.push(ingredient);\n  }\n\n  getIngredients() {\n    return this.ingredients;\n  }\n\n}\n\nexport default function CardPizza({\n  pizza,\n  pizzas,\n  addPizzas\n}) {\n  // const pizza_ingredients = new PizzaIngredients();\n  // const pushIngredients = (ingredient_id) => {\n  //   const HTTP = new XMLHttpRequest();\n  //   const url = 'http://localhost:3000/api/v1/readIngredient/'+ingredient_id);\n  //   HTTP.open(\"GET\", url);\n  //   HTTP.send();\n  //   HTTP.onreadystatechange=(e)=>{\n  //     const res = JSON.parse(HTTP.responseText);\n  //     addPizzas(res.map((item) => {\n  //       return [...pizzas, {nom:item.nom, pate:item.pate, base:item.base, prix:item.prix, calzone:item.calzone, ingredients:item.ingredients, id:item._id}];\n  //     }));\n  //   }\n  //   // fetch('http://localhost:3000/api/v1/readIngredient/'+ingredient_id)\n  //   // .then(res => (res.json()))\n  //   // .then(ingredient => pizza_ingredients.addIngredient(ingredient.nom));\n  // }\n  // const getPizzaIngredients = () => {\n  //   pizza.ingredients.map(ingredient => (pushIngredients(ingredient)))\n  // }\n  // if (pizza_ingredients.getIngredients().length === 0){\n  //   getPizzaIngredients();\n  //   const test = pizza_ingredients.getIngredients();\n  //   console.log(\"INGREDIENTS\", test, typeof(test), test.length);\n  //   //console.log(test.forEach(function(ing) { console.log(ing)}));\n  // }\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, pizza.nom), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Ingr\\xE9dients : \", pizza.ingredients.map(ingredient => /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 66\n    }\n  }, ingredient.nom)))), /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })) // <div>\n  //     <span className={`\"title\" ${todo.done ? \"completed\" : ''}`}> {todo.title} </span>    \n  // </div>\n  ;\n}","map":{"version":3,"sources":["/Users/remi/Desktop/Polytech/4A/INFO734/TP/Pizzeria/React/src/components/cardPizza.js"],"names":["React","makeStyles","Card","CardActions","CardContent","Typography","useStyles","root","width","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","PizzaIngredients","constructor","ingredients","addIngredient","ingredient","push","getIngredients","CardPizza","pizza","pizzas","addPizzas","classes","nom","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAO,YAAP;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAC;AACzBM,EAAAA,IAAI,EAAE;AACFC,IAAAA,KAAK,EAAE,GADL;AAEJC,IAAAA,QAAQ,EAAE;AAFN,GADmB;AAKzBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,cADH;AAENC,IAAAA,MAAM,EAAE,OAFF;AAGNC,IAAAA,SAAS,EAAE;AAHL,GALiB;AAUzBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE;AADL,GAVkB;AAazBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,YAAY,EAAE;AADX;AAboB,CAAD,CAA5B;;AAkBE,MAAMC,gBAAN,CAAsB;AACpBC,EAAAA,WAAW,GAAE;AACX,SAAKC,WAAL,GAAmB,EAAnB;AACD;;AAEDC,EAAAA,aAAa,CAACC,UAAD,EAAY;AACvB,SAAKF,WAAL,CAAiBG,IAAjB,CAAsBD,UAAtB;AACD;;AAEDE,EAAAA,cAAc,GAAE;AAAC,WAAO,KAAKJ,WAAZ;AAAyB;;AATtB;;AAaxB,eAAe,SAASK,SAAT,CAAmB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA;AAAhB,CAAnB,EAA+C;AAE5D;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEE,QAAMC,OAAO,GAAGvB,SAAS,EAAzB;AAEA,sBAEI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEuB,OAAO,CAACtB,IAAzB;AAA+B,IAAA,OAAO,EAAC,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEsB,OAAO,CAACf,KAA/B;AAAsC,IAAA,KAAK,EAAC,eAA5C;AAA4D,IAAA,YAAY,MAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGY,KAAK,CAACI,GADT,CADF,eAIE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACiBJ,KAAK,CAACN,WAAN,CAAkBW,GAAlB,CAAuBT,UAAD,iBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOA,UAAU,CAACQ,GAAlB,CAAtC,CADjB,CAJF,CADA,eASA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATA,CAFJ,CAiBI;AACA;AACA;AAnBJ;AAsBH","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n//import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport \"../App.css\";\n  \nconst useStyles = makeStyles({\n    root: {\n        width: 100,\n      minWidth: 275,\n    },\n    bullet: {\n      display: 'inline-block',\n      margin: '0 2px',\n      transform: 'scale(0.8)',\n    },\n    title: {\n      fontSize: 18,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n  });\n\n  class PizzaIngredients{\n    constructor(){\n      this.ingredients = [];\n    }\n\n    addIngredient(ingredient){\n      this.ingredients.push(ingredient);\n    }\n\n    getIngredients(){return this.ingredients;}\n  }\n\n\nexport default function CardPizza({pizza, pizzas, addPizzas}) {\n\n  // const pizza_ingredients = new PizzaIngredients();\n\n  // const pushIngredients = (ingredient_id) => {\n\n  //   const HTTP = new XMLHttpRequest();\n\n  //   const url = 'http://localhost:3000/api/v1/readIngredient/'+ingredient_id);\n  //   HTTP.open(\"GET\", url);\n  //   HTTP.send();\n\n  //   HTTP.onreadystatechange=(e)=>{\n  //     const res = JSON.parse(HTTP.responseText);\n  //     addPizzas(res.map((item) => {\n  //       return [...pizzas, {nom:item.nom, pate:item.pate, base:item.base, prix:item.prix, calzone:item.calzone, ingredients:item.ingredients, id:item._id}];\n  //     }));\n  //   }\n  //   // fetch('http://localhost:3000/api/v1/readIngredient/'+ingredient_id)\n  //   // .then(res => (res.json()))\n  //   // .then(ingredient => pizza_ingredients.addIngredient(ingredient.nom));\n  // }\n\n  // const getPizzaIngredients = () => {\n  //   pizza.ingredients.map(ingredient => (pushIngredients(ingredient)))\n  // }\n\n  // if (pizza_ingredients.getIngredients().length === 0){\n  //   getPizzaIngredients();\n  //   const test = pizza_ingredients.getIngredients();\n\n  //   console.log(\"INGREDIENTS\", test, typeof(test), test.length);\n  //   //console.log(test.forEach(function(ing) { console.log(ing)}));\n  // }\n\n    const classes = useStyles();\n\n    return(\n\n        <Card className={classes.root} variant=\"outlined\">\n        <CardContent>\n          <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n            {pizza.nom}\n          </Typography>\n          <Typography>\n            IngrÃ©dients : {pizza.ingredients.map((ingredient) => <span>{ingredient.nom}</span>)}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          {/* <Button size=\"small\" onClick={}>Done</Button>\n          <Button size=\"small\" onClick={}>Delete</Button> */}\n        </CardActions>\n        </Card>\n\n        // <div>\n        //     <span className={`\"title\" ${todo.done ? \"completed\" : ''}`}> {todo.title} </span>    \n        // </div>\n        \n    );\n}"]},"metadata":{},"sourceType":"module"}